#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define JP_UNDERSCORE   LS(0x87)
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_AT           LEFT_BRACKET      // @
#define JP_YEN          0x89              // ¥
#define JP_EQUAL        UNDER             // =

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_left_right: mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                               &kp Y     &kp U  &lt 5 I    &kp O    &kp BACKSPACE
&kp A             &kp S         &kp D         &kp F      &kp G    &kp LG(LS(LEFT_ARROW))      &kp MINUS      &kp H     &kp J  &kp K      &kp L    &kp P
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &lt 2 B  &kp JP_HANZEN               &kp LG(LS(N))  &kp N     &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 TAB  &mo 4    &lt 2 SPACE                 &kp ENTER      &mkp MB1                             &kp LS(NUMBER_1)
            >;

            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        NUM {
            bindings = <
&kp ESCAPE            &kp JP_AT       &kp UP          &kp JP_TILDE     &kp JP_LBRACKET                                        &kp JP_LPAREN  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp DEL
&kp JP_UNDERSCORE     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp JP_RBRACKET  &kp LA(LEFT_ARROW)      &kp JP_EQUAL  &kp JP_RPAREN  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&mt LEFT_SHIFT LC(Z)  &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LG(LS(S))    &kp SEMICOLON           &kp JP_COLON  &kp NUMBER_0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp JP_PLUS
&kp COMMA             &trans          &trans          &trans           &trans           &trans                  &trans        &trans                                                   &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(RIGHT_ARROW)) LG(LS(LEFT_ARROW))>;
        };

        FUNCTION {
            bindings = <
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0                             &kp F12    &kp F7  &kp F8  &kp F9  &kp F5
&trans        &trans        &trans        &trans        &trans        &bt BT_CLR      &kp F13    &kp F11    &kp F4  &kp F5  &kp F6  &kp F10
&trans        &trans        &trans        &trans        &trans        &trans          &trans     &kp F10    &kp F1  &kp F2  &kp F3  &kp F11
&trans        &trans        &trans        &trans        &trans        &trans          &mkp LCLK  &mkp RCLK                          &kp F12
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &mkp MB5  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB2  &mkp MB1                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &mkp MB5  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB2  &mkp MB1                                &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
